<?php

// Class: Contacts.class.php
// Table: ts_contacts
// Generated by createEntity.php, written by Paulo Ferreira (paulo.ferreira@arkium.eu)
// Date : Sun, 22 Dec 2013 16:18:39 +0000
namespace Library\Entities;

class Contacts extends \Library\Entity {

	protected $entity_id, $contact_type_id, $first_name, $last_name, $email, $phone, $fax, $mobile, $note, $status, $update_time, $created_time;

	const ENTITY_ID_INVALIDE = 2;

	const CONTACT_TYPE_ID_INVALIDE = 3;

	const FIRST_NAME_INVALIDE = 4;

	const LAST_NAME_INVALIDE = 5;

	const EMAIL_INVALIDE = 6;

	const PHONE_INVALIDE = 7;

	const FAX_INVALIDE = 8;

	const MOBILE_INVALIDE = 9;

	const NOTE_INVALIDE = 10;

	const STATUS_INVALIDE = 11;

	const UPDATE_TIME_INVALIDE = 12;

	const CREATED_TIME_INVALIDE = 13;

	public function isValid() {
		return (isset($this->entity_id) && isset($this->contact_type_id) && isset($this->first_name) && isset($this->last_name) && isset($this->email) && isset($this->phone) && isset($this->fax) && isset($this->mobile) && isset($this->note) && isset($this->status) && isset($this->update_time) && isset($this->created_time));
	}
	
	// SETTERS //
	public function setContact_id($contact_id) {
		$this->id = (int) $contact_id;
	}

	public function setEntity_id($entity_id) {
		$this->entity_id = (int) $entity_id;
	}

	public function setContact_type_id($contact_type_id) {
		$this->contact_type_id = (int) $contact_type_id;
	}

	public function setFirst_name($first_name) {
		$this->first_name = (string) $first_name;
	}

	public function setLast_name($last_name) {
		$this->last_name = (string) $last_name;
	}

	public function setEmail($email) {
		$this->email = (string) $email;
	}

	public function setPhone($phone) {
		$this->phone = (string) $phone;
	}

	public function setFax($fax) {
		$this->fax = (string) $fax;
	}

	public function setMobile($mobile) {
		$this->mobile = (string) $mobile;
	}

	public function setNote($note) {
		$this->note = (string) $note;
	}

	public function setStatus($status) {
		if (!isset($status) || !is_int($status)) {
			$this->erreurs[] = self::STATUS_INVALIDE;
		} else {
			$this->status = (int) $status;
		}
	}

	public function setUpdate_time($update_time) {
		if (!isset($update_time) || !is_string($update_time)) {
			$this->erreurs[] = self::UPDATE_TIME_INVALIDE;
		} else {
			$this->update_time = (string) $update_time;
		}
	}

	public function setCreated_time($created_time) {
		$this->created_time = (string) $created_time;
	}
	
	// GETTERS //
	public function contact_id() {
		return $this->id;
	}

	public function entity_id() {
		return $this->entity_id;
	}

	public function contact_type_id() {
		return $this->contact_type_id;
	}

	public function first_name() {
		return $this->first_name;
	}

	public function last_name() {
		return $this->last_name;
	}

	public function email() {
		return $this->email;
	}

	public function phone() {
		return $this->phone;
	}

	public function fax() {
		return $this->fax;
	}

	public function mobile() {
		return $this->mobile;
	}

	public function note() {
		return $this->note;
	}

	public function status() {
		return $this->status;
	}

	public function update_time() {
		return $this->update_time;
	}

	public function created_time() {
		return $this->created_time;
	}
}