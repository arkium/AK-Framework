<?php

// Class: Entities.class.php
// Table: ts_entities
// Generated by createEntity.php, written by Paulo Ferreira (paulo.ferreira@arkium.eu)
// Date : Fri, 10 Jan 2014 18:46:27 +0000
namespace Library\Entities;

class Entities extends \Library\Entity {

	protected $entity_type_id, $code, $organisation, $entity_group_id, $address1, $address2, $postal_code, $city, $state, $country, $http_url, $inception_date, $legal_form, $juridiction, $opportunity, $dateLastRiskAssessment, $direct, $indirect, $note, $status, $update_time, $created_time;

	const ENTITY_TYPE_ID_INVALIDE = 2;

	const CODE_INVALIDE = 3;

	const ORGANISATION_INVALIDE = 4;

	const ENTITY_GROUP_ID_INVALIDE = 5;

	const ADDRESS1_INVALIDE = 6;

	const ADDRESS2_INVALIDE = 7;

	const POSTAL_CODE_INVALIDE = 8;

	const CITY_INVALIDE = 9;

	const STATE_INVALIDE = 10;

	const COUNTRY_INVALIDE = 11;

	const HTTP_URL_INVALIDE = 12;

	const INCEPTION_DATE_INVALIDE = 13;

	const LEGAL_FORM_INVALIDE = 14;

	const JURIDICTION_INVALIDE = 15;

	const OPPORTUNITY_INVALIDE = 16;

	const DATELASTRISKASSESSMENT_INVALIDE = 17;

	const DIRECT_INVALIDE = 18;

	const INDIRECT_INVALIDE = 19;

	const NOTE_INVALIDE = 20;

	const STATUS_INVALIDE = 21;

	const UPDATE_TIME_INVALIDE = 22;

	const CREATED_TIME_INVALIDE = 23;

	public function isValid() {
		return (isset($this->entity_type_id) && isset($this->code) && isset($this->organisation) && isset($this->entity_group_id) && isset($this->address1) && isset($this->address2) && isset($this->postal_code) && isset($this->city) && isset($this->state) && isset($this->country) && isset($this->http_url) && isset($this->inception_date) && isset($this->legal_form) && isset($this->juridiction) && isset($this->opportunity) && isset($this->dateLastRiskAssessment) && isset($this->direct) && isset($this->indirect) && isset($this->note) && isset($this->status) && isset($this->update_time) && isset($this->created_time));
	}
	
	// SETTERS //
	public function setEntity_id($entity_id) {
		$this->id = (int) $entity_id;
	}

	public function setEntity_type_id($entity_type_id) {
		$this->entity_type_id = (int) $entity_type_id;
	}

	public function setCode($code) {
		$this->code = (string) $code;
	}

	public function setOrganisation($organisation) {
		$this->organisation = (string) $organisation;
	}

	public function setEntity_group_id($entity_group_id) {
		$this->entity_group_id = (int) $entity_group_id;
	}

	public function setAddress1($address1) {
		$this->address1 = (string) $address1;
	}

	public function setAddress2($address2) {
		$this->address2 = (string) $address2;
	}

	public function setPostal_code($postal_code) {
		$this->postal_code = (string) $postal_code;
	}

	public function setCity($city) {
		$this->city = (string) $city;
	}

	public function setState($state) {
		$this->state = (string) $state;
	}

	public function setCountry($country) {
		$this->country = (string) $country;
	}

	public function setHttp_url($http_url) {
		$this->http_url = (string) $http_url;
	}

	public function setInception_date($inception_date) {
		$this->inception_date = (string) $inception_date;
	}

	public function setLegal_form($legal_form) {
		$this->legal_form = (int) $legal_form;
	}

	public function setJuridiction($juridiction) {
		$this->juridiction = (string) $juridiction;
	}

	public function setOpportunity($opportunity) {
		$this->opportunity = (int) $opportunity;
	}

	public function setDateLastRiskAssessment($dateLastRiskAssessment) {
		$this->dateLastRiskAssessment = (string) $dateLastRiskAssessment;
	}

	public function setDirect($direct) {
		$this->direct = (int) $direct;
	}

	public function setIndirect($indirect) {
		$this->indirect = (int) $indirect;
	}

	public function setNote($note) {
		$this->note = (string) $note;
	}

	public function setStatus($status) {
		if (!isset($status) || !is_int($status)) {
			$this->erreurs[] = self::STATUS_INVALIDE;
		} else {
			$this->status = (int) $status;
		}
	}

	public function setUpdate_time($update_time) {
		if (!isset($update_time) || !is_string($update_time)) {
			$this->erreurs[] = self::UPDATE_TIME_INVALIDE;
		} else {
			$this->update_time = (string) $update_time;
		}
	}

	public function setCreated_time($created_time) {
		$this->created_time = (string) $created_time;
	}
	
	// GETTERS //
	public function entity_id() {
		return $this->id;
	}

	public function entity_type_id() {
		return $this->entity_type_id;
	}

	public function code() {
		return $this->code;
	}

	public function organisation() {
		return $this->organisation;
	}

	public function entity_group_id() {
		return $this->entity_group_id;
	}

	public function address1() {
		return $this->address1;
	}

	public function address2() {
		return $this->address2;
	}

	public function postal_code() {
		return $this->postal_code;
	}

	public function city() {
		return $this->city;
	}

	public function state() {
		return $this->state;
	}

	public function country() {
		return $this->country;
	}

	public function http_url() {
		return $this->http_url;
	}

	public function inception_date() {
		return $this->inception_date;
	}

	public function legal_form() {
		return $this->legal_form;
	}

	public function juridiction() {
		return $this->juridiction;
	}

	public function opportunity() {
		return $this->opportunity;
	}

	public function dateLastRiskAssessment() {
		return $this->dateLastRiskAssessment;
	}

	public function direct() {
		return $this->direct;
	}

	public function indirect() {
		return $this->indirect;
	}

	public function note() {
		return $this->note;
	}

	public function status() {
		return $this->status;
	}

	public function update_time() {
		return $this->update_time;
	}

	public function created_time() {
		return $this->created_time;
	}
}