<?php

// Class: IssuesComments.class.php
// Table: ts_issues_comments
// Generated by createEntity.php, written by Paulo Ferreira (paulo.ferreira@arkium.eu)
// Date : Sun, 23 Mar 2014 15:12:19 +0000
namespace Library\Entities;

class IssuesComments extends \Library\Entity {

	protected $comment_id, $issue_id, $user_id, $comment, $update_time, $created_time;

	const COMMENT_ID_INVALIDE = 1;

	const ISSUE_ID_INVALIDE = 2;

	const USER_ID_INVALIDE = 3;

	const COMMENT_INVALIDE = 4;

	const UPDATE_TIME_INVALIDE = 5;

	const CREATED_TIME_INVALIDE = 6;

	public function isValid() {
		return (isset($this->comment_id) && isset($this->issue_id) && isset($this->user_id) && isset($this->comment) && isset($this->update_time) && isset($this->created_time));
	}
	
	// SETTERS //
	public function setComment_id($comment_id) {
		if (!isset($comment_id) || !is_int($comment_id)) {
			$this->erreurs[] = self::COMMENT_ID_INVALIDE;
		} else {
			$this->comment_id = (int) $comment_id;
		}
	}

	public function setIssue_id($issue_id) {
		if (!isset($issue_id) || !is_int($issue_id)) {
			$this->erreurs[] = self::ISSUE_ID_INVALIDE;
		} else {
			$this->issue_id = (int) $issue_id;
		}
	}

	public function setUser_id($user_id) {
		$this->user_id = (int) $user_id;
	}

	public function setComment($comment) {
		$this->comment = (string) $comment;
	}

	public function setUpdate_time($update_time) {
		if (!isset($update_time) || !is_string($update_time)) {
			$this->erreurs[] = self::UPDATE_TIME_INVALIDE;
		} else {
			$this->update_time = (string) $update_time;
		}
	}

	public function setCreated_time($created_time) {
		$this->created_time = (int) $created_time;
	}
	
	// GETTERS //
	public function comment_id() {
		return $this->comment_id;
	}

	public function issue_id() {
		return $this->issue_id;
	}

	public function user_id() {
		return $this->user_id;
	}

	public function comment() {
		return $this->comment;
	}

	public function update_time() {
		return $this->update_time;
	}

	public function created_time() {
		return $this->created_time;
	}
}