<?php

// Class: TimesheetsApproval.class.php
// Table: ts_timesheets_approval
// Generated by createEntity.php, written by Paulo Ferreira (paulo.ferreira@arkium.eu)
// Date : Sun, 03 Nov 2013 14:09:02 +0000
namespace Library\Entities;

class TimesheetsApproval extends \Library\Entity {

	protected $user_id, $last_name, $first_name, $period_id, $start_date, $end_date, $status, $duration1, $duration2, $duration3, $submit_date, $approval_date, $status_timesheet;

	const USER_ID_INVALIDE = 1;

	const LAST_NAME_INVALIDE = 2;

	const FIRST_NAME_INVALIDE = 3;

	const PERIOD_ID_INVALIDE = 4;

	const START_DATE_INVALIDE = 5;

	const END_DATE_INVALIDE = 6;

	const STATUS_INVALIDE = 7;

	const DURATION1_INVALIDE = 8;

	const DURATION2_INVALIDE = 9;

	const DURATION3_INVALIDE = 10;

	const SUBMIT_DATE_INVALIDE = 11;

	const APPROVAL_DATE_INVALIDE = 12;

	const STATUS_TIMESHEET_INVALIDE = 13;

	public function isValid() {
		return (isset($this->user_id) && isset($this->last_name) && isset($this->first_name) && isset($this->period_id) && isset($this->start_date) && isset($this->end_date) && isset($this->status) && isset($this->duration1) && isset($this->duration2) && isset($this->duration3) && isset($this->submit_date) && isset($this->approval_date) && isset($this->status_timesheet));
	}
	
	// SETTERS //
	public function setUser_id($user_id) {
		if (!isset($user_id) || !is_int($user_id)) {
			$this->erreurs[] = self::USER_ID_INVALIDE;
		} else {
			$this->user_id = (int) $user_id;
		}
	}

	public function setLast_name($last_name) {
		if (!isset($last_name) || !is_string($last_name)) {
			$this->erreurs[] = self::LAST_NAME_INVALIDE;
		} else {
			$this->last_name = (string) $last_name;
		}
	}

	public function setFirst_name($first_name) {
		if (!isset($first_name) || !is_string($first_name)) {
			$this->erreurs[] = self::FIRST_NAME_INVALIDE;
		} else {
			$this->first_name = (string) $first_name;
		}
	}

	public function setPeriod_id($period_id) {
		if (!isset($period_id) || !is_int($period_id)) {
			$this->erreurs[] = self::PERIOD_ID_INVALIDE;
		} else {
			$this->period_id = (int) $period_id;
		}
	}

	public function setStart_date($start_date) {
		if (!isset($start_date) || !is_string($start_date)) {
			$this->erreurs[] = self::START_DATE_INVALIDE;
		} else {
			$this->start_date = (string) $start_date;
		}
	}

	public function setEnd_date($end_date) {
		if (!isset($end_date) || !is_string($end_date)) {
			$this->erreurs[] = self::END_DATE_INVALIDE;
		} else {
			$this->end_date = (string) $end_date;
		}
	}

	public function setStatus($status) {
		if (!isset($status) || !is_int($status)) {
			$this->erreurs[] = self::STATUS_INVALIDE;
		} else {
			$this->status = (int) $status;
		}
	}

	public function setDuration1($duration1) {
		$this->duration1 = (float) $duration1;
	}

	public function setDuration2($duration2) {
		$this->duration2 = (float) $duration2;
	}

	public function setDuration3($duration3) {
		$this->duration3 = (float) $duration3;
	}

	public function setSubmit_date($submit_date) {
		$this->submit_date = (string) $submit_date;
	}

	public function setApproval_date($approval_date) {
		$this->approval_date = (string) $approval_date;
	}

	public function setStatus_timesheet($status_timesheet) {
		$this->status_timesheet = (int) $status_timesheet;
	}
	
	// GETTERS //
	public function user_id() {
		return $this->user_id;
	}

	public function last_name() {
		return $this->last_name;
	}

	public function first_name() {
		return $this->first_name;
	}

	public function period_id() {
		return $this->period_id;
	}

	public function start_date() {
		return $this->start_date;
	}

	public function end_date() {
		return $this->end_date;
	}

	public function status() {
		return $this->status;
	}

	public function duration1() {
		return $this->duration1;
	}

	public function duration2() {
		return $this->duration2;
	}

	public function duration3() {
		return $this->duration3;
	}

	public function submit_date() {
		return $this->submit_date;
	}

	public function approval_date() {
		return $this->approval_date;
	}

	public function status_timesheet() {
		return $this->status_timesheet;
	}
}