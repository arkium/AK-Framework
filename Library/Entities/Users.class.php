<?php

// Class: Users.class.php
// Table: ts_users
// Generated by createEntity.php, written by Paulo Ferreira (paulo.ferreira@arkium.eu)
// Date : Sat, 20 May 2017 16:20:31 +0200

namespace Library\Entities;

class Users extends \Library\Entity {

	protected
	$code,
	$first_name,
	$last_name,
	$email_address,
	$level,
	$username,
	$password,
	$company_id,
	$contract,
	$status,
	$update_time,
	$created_time,
	$session,
	$typetimesheet;

	const CODE_INVALIDE = 2;
	const FIRST_NAME_INVALIDE = 3;
	const LAST_NAME_INVALIDE = 4;
	const EMAIL_ADDRESS_INVALIDE = 5;
	const LEVEL_INVALIDE = 6;
	const USERNAME_INVALIDE = 7;
	const PASSWORD_INVALIDE = 8;
	const COMPANY_ID_INVALIDE = 9;
	const CONTRACT_INVALIDE = 10;
	const STATUS_INVALIDE = 11;
	const UPDATE_TIME_INVALIDE = 12;
	const CREATED_TIME_INVALIDE = 13;
	const SESSION_INVALIDE = 14;
	const TYPETIMESHEET_INVALIDE = 15;

	public function isValid() {
		return (
			isset($this->code) &&
			isset($this->first_name) &&
			isset($this->last_name) &&
			isset($this->email_address) &&
			isset($this->level) &&
			isset($this->username) &&
			isset($this->password) &&
			isset($this->company_id) &&
			isset($this->contract) &&
			isset($this->status) &&
			isset($this->update_time) &&
			isset($this->created_time) &&
			isset($this->session) &&
			isset($this->typetimesheet) 
		);
	}

	// SETTERS //

	public function setUser_id($user_id) {
		$this->id = (int)$user_id;
	}

	public function setCode($code) {
		if (!isset($code) || !is_string($code)) {
			$this->erreurs[] = self::CODE_INVALIDE;
		} else {
			$this->code = (string)$code;
		}
	}

	public function setFirst_name($first_name) {
		if (!isset($first_name) || !is_string($first_name)) {
			$this->erreurs[] = self::FIRST_NAME_INVALIDE;
		} else {
			$this->first_name = (string)$first_name;
		}
	}

	public function setLast_name($last_name) {
		if (!isset($last_name) || !is_string($last_name)) {
			$this->erreurs[] = self::LAST_NAME_INVALIDE;
		} else {
			$this->last_name = (string)$last_name;
		}
	}

	public function setEmail_address($email_address) {
		if (!isset($email_address) || !is_string($email_address)) {
			$this->erreurs[] = self::EMAIL_ADDRESS_INVALIDE;
		} else {
			$this->email_address = (string)$email_address;
		}
	}

	public function setLevel($level) {
		if (!isset($level) || !is_int($level)) {
			$this->erreurs[] = self::LEVEL_INVALIDE;
		} else {
			$this->level = (int)$level;
		}
	}

	public function setUsername($username) {
		if (!isset($username) || !is_string($username)) {
			$this->erreurs[] = self::USERNAME_INVALIDE;
		} else {
			$this->username = (string)$username;
		}
	}

	public function setPassword($password) {
		if (!isset($password) || !is_string($password)) {
			$this->erreurs[] = self::PASSWORD_INVALIDE;
		} else {
			$this->password = (string)$password;
		}
	}

	public function setCompany_id($company_id) {
		if (!isset($company_id) || !is_int($company_id)) {
			$this->erreurs[] = self::COMPANY_ID_INVALIDE;
		} else {
			$this->company_id = (int)$company_id;
		}
	}

	public function setContract($contract) {
		$this->contract = (string)$contract;
	}

	public function setStatus($status) {
		if (!isset($status) || !is_int($status)) {
			$this->erreurs[] = self::STATUS_INVALIDE;
		} else {
			$this->status = (int)$status;
		}
	}

	public function setUpdate_time($update_time) {
		if (!isset($update_time) || !is_string($update_time)) {
			$this->erreurs[] = self::UPDATE_TIME_INVALIDE;
		} else {
			$this->update_time = (string)$update_time;
		}
	}

	public function setCreated_time($created_time) {
		$this->created_time = (string)$created_time;
	}

	public function setSession($session) {
		$this->session = (string)$session;
	}

	public function setTypetimesheet($typetimesheet) {
		if (!isset($typetimesheet) || !is_int($typetimesheet)) {
			$this->erreurs[] = self::TYPETIMESHEET_INVALIDE;
		} else {
			$this->typetimesheet = (int)$typetimesheet;
		}
	}

	//GETTERS //

	public function user_id() {
		return $this->id;
	}

	public function code() {
		return $this->code;
	}

	public function first_name() {
		return $this->first_name;
	}

	public function last_name() {
		return $this->last_name;
	}

	public function email_address() {
		return $this->email_address;
	}

	public function level() {
		return $this->level;
	}

	public function username() {
		return $this->username;
	}

	public function password() {
		return $this->password;
	}

	public function company_id() {
		return $this->company_id;
	}

	public function contract() {
		return $this->contract;
	}

	public function status() {
		return $this->status;
	}

	public function update_time() {
		return $this->update_time;
	}

	public function created_time() {
		return $this->created_time;
	}

	public function session() {
		return $this->session;
	}

	public function typetimesheet() {
		return $this->typetimesheet;
	}

}