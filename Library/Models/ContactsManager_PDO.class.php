<?php

// Class: ContactsManager_PDO.class.php
// Table: ts_contacts
// Generated by createEntity.php, written by Paulo Ferreira (paulo.ferreira@arkium.eu)
// Date : Sun, 22 Dec 2013 16:18:39 +0000
namespace Library\Models;

class ContactsManager_PDO extends ContactsManager {

	private function getData(\Library\HTTPRequest $request) {
		return new \Library\Entities\Contacts(array(
				'contact_id' => (int) $request->postData('contact_id'),
				'entity_id' => (int) $request->postData('entity_id'),
				'contact_type_id' => (int) $request->postData('contact_type_id'),
				'first_name' => (string) $request->postData('first_name'),
				'last_name' => (string) $request->postData('last_name'),
				'email' => (string) $request->postData('email'),
				'phone' => (string) $request->postData('phone'),
				'fax' => (string) $request->postData('fax'),
				'mobile' => (string) $request->postData('mobile'),
				'note' => (string) $request->postData('note'),
				'status' => (int) $request->postData('status'),
				'update_time' => (string) $request->postData('update_time'),
				'created_time' => (string) $request->postData('created_time') 
		));
	}

	public function getDatabases(\Library\HTTPRequest $request, \Library\Datatable $ini) {
		$table = new \Library\Datatables($request, $ini);
		return $table->run();
	}

	public function getList($debut = -1, $limite = -1) {
		$query = "SELECT * FROM ts_contacts";
		if ($debut != -1 || $limite != -1) {
			$query .= ' LIMIT ' . (int) $limite . ' OFFSET ' . (int) $debut;
		}
		try {
			$result = parent::$dao->query($query);
			$output = $result->fetchAll();
			$result->closeCursor();
		} catch (\PDOException $e) {
			$output['reponse'] = 'The database is not able to be read!<br/>';
			$output['reponse'] .= "Code Error: " . $e->getCode() . "<br/>";
			$output['reponse'] .= "Syntax Error: " . $e->getMessage();
		}
		return $output;
	}

	public function getUnique($id) {
		$query = "SELECT 
			contact_id,
			entity_id,
			contact_type_id,
			first_name,
			last_name,
			email,
			phone,
			fax,
			mobile,
			note,
			status,
			update_time,
			created_time
		FROM ts_contacts
		WHERE contact_id = :id";
		try {
			$result = parent::$dao->prepare($query);
			$result->bindValue(':id', (int) $id, \PDO::PARAM_INT);
			$result->execute();
			// $result->setFetchMode(\PDO::FETCH_CLASS | \PDO::FETCH_PROPS_LATE, '\Library\Entities\Contacts');
			$output = (array) $result->fetch(\PDO::FETCH_NUM);
			
			$output['reponse'] = true;
		} catch (\PDOException $e) {
			$output['reponse'] = 'The database is not able to be read!<br/>';
			$output['reponse'] .= "Code Error: " . $e->getCode() . "<br/>";
			$output['reponse'] .= "Syntax Error: " . $e->getMessage();
		}
		return $output;
	}

	public function count() {
		$query = "SELECT COUNT(*) FROM ts_contacts";
		return parent::$dao->query($query)->fetchColumn();
	}

	public function add(\Library\HTTPRequest $request) {
		$contacts = $this->getData($request);
		$query = "INSERT INTO ts_contacts SET 
			entity_id = :entity_id,
			contact_type_id = :contact_type_id,
			first_name = :first_name,
			last_name = :last_name,
			email = :email,
			phone = :phone,
			fax = :fax,
			mobile = :mobile,
			note = :note,
			status = :status,
			created_time = NOW()";
		try {
			parent::$dao->beginTransaction();
			$result = parent::$dao->prepare($query);
			
			$result->bindValue(':entity_id', $contacts->entity_id());
			$result->bindValue(':contact_type_id', $contacts->contact_type_id());
			$result->bindValue(':first_name', $contacts->first_name());
			$result->bindValue(':last_name', $contacts->last_name());
			$result->bindValue(':email', $contacts->email());
			$result->bindValue(':phone', $contacts->phone());
			$result->bindValue(':fax', $contacts->fax());
			$result->bindValue(':mobile', $contacts->mobile());
			$result->bindValue(':note', $contacts->note());
			$result->bindValue(':status', $contacts->status());
			
			$output['reponse'] = $result->execute();
			$this->lastInsertId = parent::$dao->lastInsertId();
			parent::$dao->commit();
		} catch (\PDOException $e) {
			parent::$dao->rollback();
			$error = $result->errorInfo();
			if ($error[1] == '1062') {
				$output['reponse'] = 'This code already exists in the database.';
			} else {
				$output['reponse'] = 'The update of the database is not successful!<br/>';
				$output['reponse'] .= "Code Error: " . $e->getCode() . "<br/>";
				$output['reponse'] .= "Syntax Error: " . $e->getMessage();
			}
		}
		return $output;
	}

	public function modify(\Library\HTTPRequest $request) {
		$contacts = $this->getData($request);
		$query = "UPDATE ts_contacts SET 
			entity_id = :entity_id,
			contact_type_id = :contact_type_id,
			first_name = :first_name,
			last_name = :last_name,
			email = :email,
			phone = :phone,
			fax = :fax,
			mobile = :mobile,
			note = :note,
			status = :status
		WHERE contact_id = :id";
		try {
			parent::$dao->beginTransaction();
			$result = parent::$dao->prepare($query);
			
			$result->bindValue(':id', $contacts->id(), \PDO::PARAM_INT);
			$result->bindValue(':entity_id', $contacts->entity_id());
			$result->bindValue(':contact_type_id', $contacts->contact_type_id());
			$result->bindValue(':first_name', $contacts->first_name());
			$result->bindValue(':last_name', $contacts->last_name());
			$result->bindValue(':email', $contacts->email());
			$result->bindValue(':phone', $contacts->phone());
			$result->bindValue(':fax', $contacts->fax());
			$result->bindValue(':mobile', $contacts->mobile());
			$result->bindValue(':note', $contacts->note());
			$result->bindValue(':status', $contacts->status());
			
			$output['reponse'] = $result->execute();
			parent::$dao->commit();
		} catch (\PDOException $e) {
			parent::$dao->rollback();
			$error = $result->errorInfo();
			if ($error[1] == '1062') {
				$output['reponse'] = 'This code already exists in the database.';
			} else {
				$output['reponse'] = 'The update of the database is not successful!<br/>';
				$output['reponse'] .= "Code Error: " . $e->getCode() . "<br/>";
				$output['reponse'] .= "Syntax Error: " . $e->getMessage();
			}
		}
		return $output;
	}

	public function delete($id) {
		$query = "DELETE FROM ts_contacts WHERE contact_id = " . (int) $id;
		try {
			parent::$dao->beginTransaction();
			$result = parent::$dao->prepare($query);
			$output['reponse'] = $result->execute();
			parent::$dao->commit();
		} catch (\PDOException $e) {
			parent::$dao->rollback();
			$output['reponse'] = 'The update of the database is not successful!<br/>';
			$output['reponse'] .= "Code Error: " . $e->getCode() . "<br/>";
			$output['reponse'] .= "Syntax Error: " . $e->getMessage();
		}
		return $output;
	}
}